version: "3.8"

networks:
  metrics:
    name: weather-metric
  tracing:
   name: weather-tracing
volumes:
 prom_data:
services:
 

 jaeger:
    image: jaegertracing/all-in-one:${JAEGER_VERSION:-latest}
    container_name: jaeger3
    ports:
      - "16686:16686"
      - "4319:4319"
    environment:
      - LOG_LEVEL=debug
    networks:
      - tracing

 hotrod:
    image: jaegertracing/example-hotrod:${JAEGER_VERSION:-latest}
    ports:
      - "8080:8080"
      - "8083:8083"
    command: ["all"]
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4319
    networks:
      - tracing
    depends_on:
      - jaeger
 
 prometheus:
    image: prom/prometheus
    container_name: prometheus3
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

 grafana:
    image: grafana/grafana
    container_name: grafana3
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
     - metrics
     - tracing

 otel-collector:
    image: otel/opentelemetry-collector:0.89.0
    container_name: Collector1
    command: ["--config=/etc/otel-collector-config.yml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888" 
      - "8889:8889" 
      - "13133:13133"
      - "4318:4318"
    networks:
      - metrics
      - tracing
     
 
 app:
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      - otel-collector
    ports:
      - 5001:8080
    environment:
      Otlp__Endpoint: http://otel-collector:4318
    networks:
      - metrics
      - tracing
  
